---

stages:
  - unit
  - test
  - external

UnitTests:
  image: registry.fedoraproject.org/fedora
  stage: unit
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'
      when: never
    - when: always
  script:
    - |
      yum -y install python3 python3-pip python3-devel python3-gobject \
          python3-requests iproute gcc curl NetworkManager-libnm git
      python3 -m pip install pytest PyYAML pexpect pyroute2 click==8.0.4 behave
      python3 -m pip install --prefix /usr/ black==22.3.0 sphinx==4.2.0 sphinx-markdown-builder
      set +e
      stty cols 74
      python3 -m pytest --capture=fd --junitxml=report.xml
      rc=$?
      contrib/gitlabify_junit.py
      if [ $rc != 0 ]; then
        curl --request POST --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
        --form "note=UnitTests failed\! $CI_SERVER_URL/$CI_PROJECT_PATH/pipelines/$CI_PIPELINE_ID" \
        "$CI_SERVER_URL/api/v4/projects/$CI_PROJECT_ID/repository/commits/$CI_COMMIT_SHA/comments"
      fi
      exit $rc
  artifacts:
    when: always
    reports:
      junit:
        - report.xml

TestResults:
  image: registry.fedoraproject.org/fedora
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'
      when: never
    - when: manual
  script:
    - |
      dnf -y install wget grep sed coreutils python3 python3-pip
      python3 -m pip install python-gitlab
      JUNIT_URL="$(python3 run/centos-ci/gitlab_junit.py)"; RC=$?
      echo $JUNIT_URL
      [ "$RC" == 0 ] || exit 1
      for i in {1..50}; do
          wget -O report.xml "$JUNIT_URL" && break
          sleep 5
      done
      [ -s report.xml ] || rm -f report.xml
      [ -f report.xml ] || exit 1
      sed -n "/LOG:/n;p" report.xml | sed "s/<.*//g" | sort
      ! grep -q -F "<failure>" report.xml
  artifacts:
    when: always
    reports:
      junit:
        - report.xml
