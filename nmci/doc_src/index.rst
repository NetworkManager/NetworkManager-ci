NMCI - NetworkManager-ci Library
================================

Do not edit this file. This is generated by :code:`sphinx-build` from source [:code:`nmci/doc_src/index.rst`](nmci/doc_src/index.rst).

Adding standard python module (e.g. :code:`nmci.prepare`)
---------------------------------------------------------

When created, do not forget to import it at the end of [:code:`nmci/__init__.py`](nmci/__init__.py) file, otherwise it will not be imported with :code:`import nmci`.

Adding new module as class (e.g. :code:`nmci.process`)
------------------------------------------------------

If module is written as python class :code:`_ClassMod` in :code:`nmci/classmod.py`, do not forget to

1. Define :code:`_module = _ClassMod()` at the end of file.
2. Define :code:`__getattr__()` to avoid not fully loaded modules within :code:`nmci`.

.. code-block:: python

    def __getattr__(attr):
        return getattr(_module, attr)


3. Add module to file [:code:`nmci/__init__.py`](nmci/__init__.py):

.. code-block:: python

    import nmci.classmod
    # this line is important for autocomplete to work correctly
    classmod = nmci.classmod._module
    sys.modules["nmci.classmod"] = classmod

Remember, if you define another classes in :code:`nmci/classmod.py`, they will not be accessible,
unless you set them as attributes of :code:`_ClassMod`.

Add module to documentation
---------------------------

Add following in [:code:`nmci/doc_src/index.rst`](nmci/doc_src/index.rst):

.. code-block:: markdown

    my_new_mod
    ==========
    
    .. automodule:: nmci.my_new_mod
       :members:
       :undoc-members:
       :show-inheritance:

Regenerate the documentation from source:

.. code-block:: bash

    sphinx-build -E -a -b markdown nmci/doc_src nmci/doc

Results should be in [:code:`nmci/doc/markdown/index.md`](nmci/doc/markdown/index.md).


API of the nmci modules.
========================

cext
====

.. automodule:: nmci.cext
   :members:
   :undoc-members:
   :show-inheritance:


cleanup
=======

.. automodule:: nmci.cleanup
   :members:
   :undoc-members:
   :show-inheritance:


crash
=====

.. automodule:: nmci.crash
   :members:
   :undoc-members:
   :show-inheritance:


dbus
====

.. automodule:: nmci.dbus
   :members:
   :undoc-members:
   :show-inheritance:


embed
=====

.. automodule:: nmci.embed
   :members:
   :undoc-members:
   :show-inheritance:


git
===

.. automodule:: nmci.git
   :members:
   :undoc-members:
   :show-inheritance:


gsm
===

.. automodule:: nmci.gsm
   :members:
   :undoc-members:
   :show-inheritance:


ip
==
.. automodule:: nmci.ip
   :members:
   :undoc-members:
   :show-inheritance:


misc
====

.. automodule:: nmci.misc
   :members:
   :undoc-members:
   :show-inheritance:


nmutil
======

.. automodule:: nmci.nmutil
   :members:
   :undoc-members:
   :show-inheritance:


pexpect
=======

.. automodule:: nmci.pexpect
   :members:
   :undoc-members:
   :show-inheritance:


prepare
=======

.. automodule:: nmci.prepare
   :members:
   :undoc-members:
   :show-inheritance:


process
=======

.. automodule:: nmci.process
   :members:
   :undoc-members:
   :show-inheritance:


sdresolved
==========

.. automodule:: nmci.sdresolved
   :members:
   :undoc-members:
   :show-inheritance:


util
====

.. automodule:: nmci.util
   :members:
   :undoc-members:
   :show-inheritance:


veth
====

.. automodule:: nmci.veth
   :members:
   :undoc-members:
   :show-inheritance:
