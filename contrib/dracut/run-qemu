#!/bin/bash
# Check which virtualization technology to use
# We prefer kvm, kqemu, userspace in that order.
export PATH=/sbin:/bin:/usr/sbin:/usr/bin

[[ -x /usr/libexec/qemu-kvm ]] && BIN=/usr/libexec/qemu-kvm && ARGS="-cpu max"
[[ -c /dev/kvm ]] && [[ -x /usr/libexec/qemu-kvm ]] && ARGS="-cpu host"

[[ $BIN ]] || {
   echo "Could not find a working KVM or QEMU to test with!" >&2
   echo "Please install kvm or qemu." >&2
   exit 1
}

[[ -z $RAM ]] && RAM=768

[[ $(uname -p) = "ppc64le" ]] && ARGS="$ARGS -M cap-nested-hv=on,cap-cfpc=broken,cap-sbbc=broken,cap-ibs=broken,cap-ccf-assist=off,cap-hpt-max-page-size=4194304"

# Provide rng device sourcing the hosts /dev/urandom and other standard parameters
ARGS="$ARGS -smp 2 -m $RAM -nodefaults -vga none -display none -no-reboot -device virtio-rng"

if ! [[ $* = *-daemonize* ]]; then
    ARGS="$ARGS -serial stdio"
fi

KVERSION=${KVERSION-$(uname -r)}

VMLINUZ="/lib/modules/${KVERSION}/vmlinuz"

if ! [ -f "$VMLINUZ" ]; then
    [[ -f /etc/machine-id ]] && read MACHINE_ID < /etc/machine-id

    if [[ $MACHINE_ID ]] && ( [[ -d /boot/${MACHINE_ID} ]] || [[ -L /boot/${MACHINE_ID} ]] ); then
        VMLINUZ="/boot/${MACHINE_ID}/$KVERSION/linux"
    else
        VMLINUZ="/boot/vmlinuz-${KVERSION}"
    fi
fi

echo $BIN $ARGS -kernel $VMLINUZ "$@"
exec $BIN $ARGS -kernel $VMLINUZ "$@"
