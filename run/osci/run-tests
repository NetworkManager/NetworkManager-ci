#!/bin/bash

RELEASE=$1
MY_PATH="`dirname \"$0\"`"
TESTS=$(cat $MY_PATH/$RELEASE.tests)

# Add failures and test counter variables
CNT=0
FAILURES=()
RESULTS_DIR=/tmp/artifacts
RESULTS=$RESULTS_DIR/RESULTS


function run_needed_workarounds ()
{
    ### NEEDED WORKAROUNDS ##################

    # 1. Missing /usr/bin/python binary for pip

    if [ ! -f /usr/bin/python ]; then
        echo "create /usr/bin/python link to /usr/bin/python2"
        ln -s /usr/bin/python2 /usr/bin/python
    else
        echo "no need to link /usr/bin/python"
    fi


    # 2. Broken racoon in ipsec in F28

    if [[ $RELEASE == *fedora* ]]; then
        yum -y install ipsec-tools
        yum downgrade -y https://kojipkgs.fedoraproject.org//packages/ipsec-tools/0.8.2/10.fc28/x86_64/ipsec-tools-0.8.2-10.fc28.x86_64.rpm

        # We can remove this once https://bugzilla.redhat.com/show_bug.cgi?id=1739797 is fixed
        yum downgrade -y https://kojipkgs.fedoraproject.org//packages/dnsmasq/2.79/7.fc29/x86_64/dnsmasq-2.79-7.fc29.x86_64.rpm
    fi

    # 3. Look we have simetimes timeouting hostnamectl
    systemctl restart systemd-hostnamed
    hostnamectl

    # 4. we do miss yum in F31
    ln -s /usr/bin/dnf /usr/bin/yum

    ###########################################
}


function enable_debug_log ()
{
    # Enable trace level logs for all domains
    echo -e "[logging]\nlevel=TRACE\ndomains=ALL\n" > /etc/NetworkManager/conf.d/99-test.conf
    systemctl reload NetworkManager

}


function run_tests ()
{
    if [ ! -d "$RESULTS_DIR" ]; then
        mkdir -p /tmp/artifacts
    fi

    echo "PASS" > $RESULTS

    echo "WILL RUN:"
    echo $TESTS

    # For all tests
    for T in $TESTS; do
        COUNTER=$(printf "%03d\n" $CNT)
        echo "RUNING $T"

        TIMEOUT=$(sed -n "/- $T:/,/ - /p" mapper.yaml | grep -e "timeout:" | awk -F: '{print $2}')
        if [ "$TIMEOUT" == "" ]; then
            TIMEOUT="10m"
        fi

        if [[ $T == *nmtui* ]]; then
            TEST=NetworkManager-ci_Test$COUNTER"_"$T timeout $TIMEOUT nmtui/./runtest.sh $T; rc=$?
        else
            TEST=NetworkManager-ci_Test$COUNTER"_"$T timeout $TIMEOUT nmcli/./runtest.sh $T; rc=$?
        fi

        if [ $rc -ne 0 ]; then
            # Overal result is FAIL
            echo "FAIL" > $RESULTS
            # Move reports to /var/www/html/results/ and add FAIL prefix
            if [[ $T == *nmtui* ]]; then
                mv /tmp/report_NetworkManager-ci_Test$COUNTER"_"$T.log $RESULTS_DIR/FAIL-NetworkManager-ci_Test$COUNTER"_"$T.log
            else
                mv /tmp/report_NetworkManager-ci_Test$COUNTER"_"$T.html $RESULTS_DIR/FAIL-NetworkManager-ci_Test$COUNTER"_"$T.html
            fi
            FAILURES+=($T)
        else
            # Move reports to /tmp/artifacts
            if [[ $T == *nmtui* ]]; then
                mv /tmp/report_NetworkManager-ci_Test$COUNTER"_"$T.log $RESULTS_DIR/NetworkManager-ci_Test$COUNTER"_"$T.log
            else
                mv /tmp/report_NetworkManager-ci_Test$COUNTER"_"$T.html $RESULTS_DIR/NetworkManager-ci_Test$COUNTER"_"$T.html
            fi
        fi

        ((CNT++))
    done
}


function report_results_and_exit ()
{
    rc=1
    # Write out tests failures
    if [ ${#FAILURES[@]} -ne 0 ]; then
        echo "** $CNT TESTS PASSED"
        echo "--------------------------------------------"
        echo "** ${#FAILURES[@]} TESTS FAILED"
        echo "--------------------------------------------"
        for FAIL in "${FAILURES[@]}"; do
            echo "$FAIL"
        done
    else
        rc=0
        echo "** ALL $CNT TESTS PASSED!"
    fi

    exit $rc
}


run_needed_workarounds
enable_debug_log
run_tests
report_results_and_exit
