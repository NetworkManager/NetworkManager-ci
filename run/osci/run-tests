#!/bin/bash

RELEASE=$1
MY_PATH="`dirname \"$0\"`"
TESTS=$(cat $MY_PATH/$RELEASE.tests)

# Add failures and test counter variables
CNT=0
FAILURES=()
RESULTS_DIR=/tmp/artifacts
RESULTS=$RESULTS_DIR/RESULTS

export LC_ALL=C.UTF-8


function run_needed_workarounds ()
{
    ### NEEDED WORKAROUNDS ##################

    echo "No workarounds needed these days, yay!"

    ###########################################
}


function enable_debug_log ()
{
    # Enable trace level logs for all domains
    echo -e "[logging]\nlevel=TRACE\ndomains=ALL\n" > /etc/NetworkManager/conf.d/95-nmci-test.conf
    systemctl reload NetworkManager

}


function run_tests ()
{
    # Add fail, skip, pass, and test counter variables
    cnt=0
    fail=()
    skip=()
    pass=()

    if [ ! -d "$RESULTS_DIR" ]; then
        mkdir -p /tmp/artifacts
    fi

    echo "PASS" > $RESULTS

    echo "WILL RUN:"
    echo $TESTS
    echo "Starting time:" $(date)

    # For all tests
    for test in $TESTS; do
        echo "_______________________________"
        echo "RUNNING $test"
        counter=$(printf "%04d\n" $cnt)

        timer=$(sed -n "/- $test:/,/ - /p" mapper.yaml | grep -e "timeout:" | awk -F: '{print $2}')
        if [ "$TIMEOUT" == "" ]; then
            timer="10m"
        fi

        export TEST="NetworkManager-ci_Test${counter}_$test"
        cmd=$(sed -n "/- $test:/,/ - /p" mapper.yaml | grep -e "run:" | awk -F: '{print $2}')
        if [ "$cmd" == "" ] ; then
            cmd="run/./runtest.sh $test"
        fi

        timeout $timer $cmd; rc=$?
        echo "Finished at:" $(date)

        result="/tmp/artifacts/"
        if [ $rc = 77 ]; then
            skip+=($test)
        elif [ $rc = 0 ]; then
            pass+=($test)
        else
            # Overal result is FAIL
            result=$RESULTS_DIR/FAIL-report_$TEST.html
            fail+=($test)
            # This should not be neeed, we do not have it in RHEL/Fedora testing
            #systemctl restart NetworkManager
            #nmcli con up id testeth0
        fi
        mv /tmp/report_$TEST.html $result
        ((cnt++))
    done
}


function report_results_and_exit ()
{
    rc=1
    echo "--------------------------------------------"
    echo "** ${#pass[@]} TESTS PASSED"
    if [ ${#pass[@]} -ne 0 ]; then
        rc=0
        echo "PASS" > $RESULTS_DIR/RESULTS
    fi
    if [ ${#fail[@]} -ne 0 ]; then
        echo "--------------------------------------------"
        echo "** ${#fail[@]} TESTS FAILED"
        for f in "${fail[@]}"; do
            echo "$f"
        done
        rc=1
        echo "FAIL" > $RESULTS_DIR/RESULTS
    fi
    if [ ${#skip[@]} -ne 0 ]; then
        echo "--------------------------------------------"
        echo "** ${#skip[@]} TESTS SKIPPED"
        for s in "${skip[@]}"; do
            echo "$s"
        done
    fi
    echo "${#pass[@]}" > $RESULTS_DIR/summary.txt
    echo "${#fail[@]}" >> $RESULTS_DIR/summary.txt
    echo "${#skip[@]}" >> $RESULTS_DIR/summary.txt
    echo "${fail[@]}" >> $RESULTS_DIR/summary.txt
    echo "${skip[@]}" >> $RESULTS_DIR/summary.txt
    exit $rc
}


run_needed_workarounds
enable_debug_log
run_tests
report_results_and_exit
